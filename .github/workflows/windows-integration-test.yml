name: Windows Integration Test

on:
  push:
    branches: [ cli-test ]
  pull_request:
    branches: [ cli-test ]

jobs:
  test-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Install dependencies
      run: |
        choco install ffmpeg tesseract
        refreshenv

    - name: Build CLI
      run: cargo build --release

    - name: Debug environment
      shell: pwsh
      run: |
        Write-Host "Current directory: $(Get-Location)"
        Write-Host "User profile: $env:USERPROFILE"
        Get-WmiObject -Class Win32_VideoController | Select-Object Name, AdapterRAM, DriverVersion

    - name: Run CLI and capture output
      shell: pwsh
      run: |
        $process = Start-Process -FilePath ".\target\release\screenpipe.exe" -ArgumentList "--debug" -PassThru -RedirectStandardOutput "screenpipe_output.log" -RedirectStandardError "screenpipe_error.log"
        Start-Sleep -Seconds 60
        Stop-Process -Id $process.Id -Force

    - name: Check for crashes and expected behavior
      shell: pwsh
      run: |
        Write-Host "Checking for log file..."
        $LogFile = Get-ChildItem -Path $env:USERPROFILE -Recurse -Filter "screenpipe.log" -ErrorAction SilentlyContinue | Select-Object -First 1 -ExpandProperty FullName
        if ($LogFile) {
          Write-Host "Log file found at: $LogFile"
          if (Select-String -Path $LogFile -Pattern "panic" -Quiet) {
            Write-Host "CLI crashed"
            Get-Content $LogFile
            exit 1
          }
          Write-Host "CLI ran successfully for 60 seconds without crashing"
          Get-Content $LogFile -Tail 50
        } else {
          Write-Host "Log file not found, checking standard output..."
          if (Select-String -Path "screenpipe_output.log" -Pattern "panic" -Quiet) {
            Write-Host "CLI crashed"
            Get-Content "screenpipe_output.log"
            exit 1
          }
          if (-not (Select-String -Path "screenpipe_output.log" -Pattern "Server starting on 127.0.0.1:3030" -Quiet)) {
            Write-Host "Server did not start correctly"
            Get-Content "screenpipe_output.log"
            exit 1
          }
          Write-Host "CLI ran successfully for 60 seconds without crashing"
          Get-Content "screenpipe_output.log" -Tail 50
        }

    - name: Upload logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: screenpipe-logs
        path: |
          ${{ env.USERPROFILE }}\.screenpipe\logs\
          screenpipe_output.log
          screenpipe_error.log

    - name: Upload captured data
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: screenpipe-data
        path: ${{ env.USERPROFILE }}\.screenpipe\data\
