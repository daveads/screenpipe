name: Release CLI Test

on:
  push:
    branches:
      - cli-test
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          override: true
          cache: true

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libavformat-dev \
            libavfilter-dev \
            libavdevice-dev \
            ffmpeg \
            libasound2-dev \
            pkg-config \
            libtesseract-dev \
            tesseract-ocr

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build with RPATH
        run: |
          export PKG_CONFIG_PATH="/usr/lib/x86_64-linux-gnu/pkgconfig:$PKG_CONFIG_PATH"
          export RUSTFLAGS="-C link-arg=-Wl,-rpath,\$ORIGIN/../lib"
          cargo build --release --features pipes
          # Print cargo version and build info for debugging
          cargo --version
          rustc --version
          echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH"
          echo "RUSTFLAGS=$RUSTFLAGS"

      - name: Create package structure
        run: |
          mkdir -p screenpipe-linux/bin
          mkdir -p screenpipe-linux/lib
          cp target/release/screenpipe screenpipe-linux/bin/
          chmod +x screenpipe-linux/bin/screenpipe
          
          # List required libraries
          echo "Listing dependencies:"
          ldd target/release/screenpipe

          # Copy libraries
          echo "Copying libraries..."
          cp /usr/lib/x86_64-linux-gnu/libavcodec.so* screenpipe-linux/lib/
          cp /usr/lib/x86_64-linux-gnu/libavformat.so* screenpipe-linux/lib/
          cp /usr/lib/x86_64-linux-gnu/libavutil.so* screenpipe-linux/lib/
          cp /usr/lib/x86_64-linux-gnu/libswresample.so* screenpipe-linux/lib/
          cp /usr/lib/x86_64-linux-gnu/libswscale.so* screenpipe-linux/lib/
          cp /usr/lib/x86_64-linux-gnu/libavfilter.so* screenpipe-linux/lib/
          cp /usr/lib/x86_64-linux-gnu/libavdevice.so* screenpipe-linux/lib/
          cp /usr/lib/x86_64-linux-gnu/libtesseract.so* screenpipe-linux/lib/

          # List copied libraries for verification
          echo "Contents of lib directory:"
          ls -la screenpipe-linux/lib/

      - name: Create tarball
        run: |
          tar -czf screenpipe-linux-x86_64.tar.gz screenpipe-linux
          echo "Created tarball:"
          ls -lh screenpipe-linux-x86_64.tar.gz

      - name: Test package
        run: |
          mkdir test-dir
          cd test-dir
          tar xf ../screenpipe-linux-x86_64.tar.gz
          echo "Testing binary..."
          LD_LIBRARY_PATH=./screenpipe-linux/lib ./screenpipe-linux/bin/screenpipe --version || {
            echo "Test failed. Checking library dependencies:"
            ldd ./screenpipe-linux/bin/screenpipe
            exit 1
          }

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: screenpipe-linux
          path: screenpipe-linux-x86_64.tar.gz