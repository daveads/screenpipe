name: Linux Integration Test - OCR Focus

on:
  push:
    branches: [ cli-test ]
  pull_request:
    branches: [ cli-test ]

jobs:
  test-linux-ocr:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb pulseaudio ffmpeg libasound2-dev libgtk-3-dev libwebkit2gtk-4.0-dev libavformat-dev libavfilter-dev libavdevice-dev x11-utils x11-apps xdotool openbox xterm fonts-liberation tesseract-ocr libtesseract-dev imagemagick

    - name: Build CLI
      run: cargo build --release

    - name: Set up virtual display with window manager
      run: |
        Xvfb :99 -ac -screen 0 1280x1024x24 &
        echo "DISPLAY=:99" >> $GITHUB_ENV
        sleep 3
        export DISPLAY=:99
        openbox &
        sleep 3

    - name: Prepare OCR test image
      run: |
        export DISPLAY=:99
        convert -size 800x600 xc:white -font Liberation-Sans -pointsize 72 -fill black -gravity center -draw "text 0,0 'Screenpipe OCR Test'" ocr_test.png
        display -window root ocr_test.png

    - name: Run Screenpipe
      run: |
        export DISPLAY=:99
        export SCREENPIPE_CAPTURE_METHOD=x11
        export PATH=$PATH:/usr/bin
        export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/x86_64-linux-gnu
        ./target/release/screenpipe --debug > screenpipe_output.log 2>&1 &
        SCREENPIPE_PID=$!
        sleep 60  # Run for 1 minute to ensure capture of OCR
        kill $SCREENPIPE_PID

    - name: Test OCR functionality
      run: |
        LOG_FILE=$(find $HOME -name screenpipe.log)
        if [ -n "$LOG_FILE" ]; then
          echo "Log file found at: $LOG_FILE"
          echo "Last 100 lines of log:"
          tail -n 100 "$LOG_FILE"
          if grep -i "screenpipe ocr test" "$LOG_FILE"; then
            echo "OCR test passed: Text detected successfully"
          else
            echo "OCR test failed: Text not detected"
            echo "Full log content:"
            cat "$LOG_FILE"
            exit 1
          fi
        else
          echo "Log file not found"
          exit 1
        fi

    - name: Check for crashes and overall behavior
      run: |
        LOG_FILE=$(find $HOME -name screenpipe.log)
        if [ -n "$LOG_FILE" ]; then
          if grep -q "panic" "$LOG_FILE"; then
            echo "CLI crashed"
            exit 1
          fi
          if ! grep -q "Server starting on 127.0.0.1:3030" "$LOG_FILE"; then
            echo "Server did not start correctly"
            exit 1
          fi
          echo "CLI ran successfully without crashing"
        else
          echo "Log file not found"
          exit 1
        fi

    - name: Upload logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: screenpipe-logs
        path: |
          ~/.screenpipe/logs/
          screenpipe_output.log

    - name: Upload captured data
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: screenpipe-data
        path: ~/.screenpipe/data/
